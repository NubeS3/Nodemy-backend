version: "3"
services:
  nodemy-app:
    container_name: nodemy-app
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    environment:
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_HOSTNAME=mongo
      - MONGO_PORT=$MONGO_PORT
      - MONGO_DB=$MONGO_DB
      - JWT_SECRET=$JWT_SECRET
      - SENDGRID_API_KEY=$SENDGRID_API_KEY
      - HOST=$HOST
      - PHASE=$PHASE
    ports:
      - "80:8080"
    links:
      - mongo
    networks:
      - app-network

  mongo:
    container_name: nodemy-app-db
    image: mongo
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    volumes:
      - dbdata:/home/nodemy-db
    networks:
      - app-network

  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      - nodemy-app
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/html --email huaanhminh0412@gmail.com --agree-tos --no-eff-email --staging -d nodemy-apis.online  -d www.nodemy-apis.online

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /home/nodemy-app
      o: bind